<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        qgAAAKoBBgpwTwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEXSURBVEhL1ZRL
        agIxHIdnpYfoJaynsNWbtLh1JQhuRLS7nkNv0GXrxhd4AT2AosWdj9/nxE07mUwmCPrBB5nwfyTRJMpA
        Udblj/w1Mn6XBRnEk5zKk/yWH0YaMDeRxOSClVN8LV+Y+ENVbuRY5toJx8Iqk4pfqUli3i5fnowkx+Ii
        a9w/drIXD1Ppy2089IOtt+JhKsQQ681jNijLmTxKknwkh7/1s7RCwEp25VB+yo5DYgaSHHK5fFYOsh0P
        c0EuNayw1SznbsP5e6Q1eJUcAdpud1ADCs+NSyYSCG6wMN6kAceyN1aYSCCoAXwZbdx/Ay4V2ghu4MLZ
        4OY3+foWNWXDU3LITX2LeE1pkuc1ZeUUL0lDFJ0B9AOHW5noQe0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        gwAAAIMBYu+7WgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJfSURBVEhLlZbN
        b05BFIdvJcpCUkVIaG201jTRDRvCDhtJG9ZiU41vG3+BjbLFTtgRIkgQRCQNIti1TXTflojvpCX1PJN5
        m95557a3v+RJ5pyZc9+ZOefc+xaLaDMch0cwCj8jI9HnnGuWrA64Dn9hGp7AEJyNOH4KM5FrYEwtHYTv
        MAWnYDVUqR1Ow2cw5gAsqEH4B3egTUdNuYm7YKzPyMqdu+AyLNOxRBlzBXxG00m8P4/oznMP3wQXwHlx
        vBFSGXsPfJYxczKh3nnuWo7AL/gBJlsc6zsMqczLFzDxQZaZ1WJCU+0B527DOh1Rjj2Jc7t1JDoDVlen
        hkmxFHPV8i6yPFhl6XsPb4NV1hrwB+yT4iFY06m8w1noC1Ze/eCaXD6ewQMHY3DJQaIeMHhHsPLqBdds
        D1ZZNqPdHxJmd6baAAa7yyqZZNesD1ZZ58BqCj+gkdMwfIDWYJWl7yO8ClazzkP4AY/hcXLaBSbLLp2/
        S09nvTu3U0dGNmy4IpP82EGFDoEPsu6fwwv4HX3OVcnCCUm2lCxTSyvVNngD3vMEvIxMRt9rcE0q+8QN
        DGjYaBppo9lAf8Ac7IUWaMhXwj4wB65Jm63UaMq2tr3XBqsoukDbe16ho0Ir4T74ut6iA7n7r3A1WFHp
        y+4WfIJVsJhcMw43wVgL4huUXnbKV6yv2htgTo5CXR0DY4z1Gfshq8YHxwR266iprWCMsZUfnIY8iddl
        pZyAhT6Zzp0E13otlTtP5f2ZeCvBmremL4KVJo71NfrBhDbdeR1ZZtayzehflfl/W/Q5N1eKzSqK/yaP
        nq7GTA5+AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wC63RFHt7bqXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>